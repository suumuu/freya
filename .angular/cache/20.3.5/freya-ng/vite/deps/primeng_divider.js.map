{
  "version": 3,
  "sources": ["../../../../../../node_modules/primeng/fesm2022/primeng-divider.mjs"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/divider';\nimport { BaseStyle } from 'primeng/base';\n\n/* Position */\nconst _c0 = [\"*\"];\nconst inlineStyles = {\n  root: ({\n    instance\n  }) => ({\n    justifyContent: instance.layout === 'horizontal' ? instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'left' ? 'flex-start' : instance.align === 'right' ? 'flex-end' : null : null,\n    alignItems: instance.layout === 'vertical' ? instance.align === 'center' || instance.align == null ? 'center' : instance.align === 'top' ? 'flex-start' : instance.align === 'bottom' ? 'flex-end' : null : null\n  })\n};\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-divider p-component', 'p-divider-' + instance.layout, 'p-divider-' + instance.type, {\n    'p-divider-left': instance.layout === 'horizontal' && (!instance.align || instance.align === 'left')\n  }, {\n    'p-divider-center': instance.layout === 'horizontal' && instance.align === 'center'\n  }, {\n    'p-divider-right': instance.layout === 'horizontal' && instance.align === 'right'\n  }, {\n    'p-divider-top': instance.layout === 'vertical' && instance.align === 'top'\n  }, {\n    'p-divider-center': instance.layout === 'vertical' && (!instance.align || instance.align === 'center')\n  }, {\n    'p-divider-bottom': instance.layout === 'vertical' && instance.align === 'bottom'\n  }],\n  content: 'p-divider-content'\n};\nclass DividerStyle extends BaseStyle {\n  name = 'divider';\n  theme = style;\n  classes = classes;\n  inlineStyles = inlineStyles;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵDividerStyle_BaseFactory;\n    return function DividerStyle_Factory(__ngFactoryType__) {\n      return (ɵDividerStyle_BaseFactory || (ɵDividerStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DividerStyle)))(__ngFactoryType__ || DividerStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: DividerStyle,\n    factory: DividerStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DividerStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Divider is used to separate contents.\n *\n * [Live Demo](https://primeng.org/divider)\n *\n * @module dividerstyle\n *\n */\nvar DividerClasses;\n(function (DividerClasses) {\n  /**\n   * Class name of the root element\n   */\n  DividerClasses[\"root\"] = \"p-divider\";\n  /**\n   * Class name of the content element\n   */\n  DividerClasses[\"content\"] = \"p-divider-content\";\n})(DividerClasses || (DividerClasses = {}));\n\n/**\n * Divider is used to separate contents.\n * @group Components\n */\nclass Divider extends BaseComponent {\n  /**\n   * Style class of the component.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Specifies the orientation.\n   * @group Props\n   */\n  layout = 'horizontal';\n  /**\n   * Border style type.\n   * @group Props\n   */\n  type = 'solid';\n  /**\n   * Alignment of the content.\n   * @group Props\n   */\n  align;\n  _componentStyle = inject(DividerStyle);\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵDivider_BaseFactory;\n    return function Divider_Factory(__ngFactoryType__) {\n      return (ɵDivider_BaseFactory || (ɵDivider_BaseFactory = i0.ɵɵgetInheritedFactory(Divider)))(__ngFactoryType__ || Divider);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Divider,\n    selectors: [[\"p-divider\"]],\n    hostAttrs: [\"data-pc-name\", \"divider\", \"role\", \"separator\"],\n    hostVars: 5,\n    hostBindings: function Divider_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-orientation\", ctx.layout);\n        i0.ɵɵstyleMap(ctx.sx(\"root\"));\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      styleClass: \"styleClass\",\n      layout: \"layout\",\n      type: \"type\",\n      align: \"align\"\n    },\n    features: [i0.ɵɵProvidersFeature([DividerStyle]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 2,\n    template: function Divider_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"content\"));\n      }\n    },\n    dependencies: [CommonModule, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Divider, [{\n    type: Component,\n    args: [{\n      selector: 'p-divider',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: `\n        <div [class]=\"cx('content')\">\n            <ng-content></ng-content>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[attr.aria-orientation]': 'layout',\n        'data-pc-name': 'divider',\n        role: 'separator',\n        '[class]': \"cn(cx('root'), styleClass)\",\n        '[style]': \"sx('root')\"\n      },\n      providers: [DividerStyle]\n    }]\n  }], null, {\n    styleClass: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    align: [{\n      type: Input\n    }]\n  });\n})();\nclass DividerModule {\n  static ɵfac = function DividerModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DividerModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DividerModule,\n    imports: [Divider],\n    exports: [Divider]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Divider]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DividerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Divider],\n      exports: [Divider]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Divider, DividerClasses, DividerModule, DividerStyle };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAM,MAAM,CAAC,GAAG;AAChB,IAAM,eAAe;AAAA,EACnB,MAAM,CAAC;AAAA,IACL;AAAA,EACF,OAAO;AAAA,IACL,gBAAgB,SAAS,WAAW,eAAe,SAAS,UAAU,YAAY,SAAS,SAAS,OAAO,WAAW,SAAS,UAAU,SAAS,eAAe,SAAS,UAAU,UAAU,aAAa,OAAO;AAAA,IAClN,YAAY,SAAS,WAAW,aAAa,SAAS,UAAU,YAAY,SAAS,SAAS,OAAO,WAAW,SAAS,UAAU,QAAQ,eAAe,SAAS,UAAU,WAAW,aAAa,OAAO;AAAA,EAC9M;AACF;AACA,IAAM,UAAU;AAAA,EACd,MAAM,CAAC;AAAA,IACL;AAAA,EACF,MAAM,CAAC,yBAAyB,eAAe,SAAS,QAAQ,eAAe,SAAS,MAAM;AAAA,IAC5F,kBAAkB,SAAS,WAAW,iBAAiB,CAAC,SAAS,SAAS,SAAS,UAAU;AAAA,EAC/F,GAAG;AAAA,IACD,oBAAoB,SAAS,WAAW,gBAAgB,SAAS,UAAU;AAAA,EAC7E,GAAG;AAAA,IACD,mBAAmB,SAAS,WAAW,gBAAgB,SAAS,UAAU;AAAA,EAC5E,GAAG;AAAA,IACD,iBAAiB,SAAS,WAAW,cAAc,SAAS,UAAU;AAAA,EACxE,GAAG;AAAA,IACD,oBAAoB,SAAS,WAAW,eAAe,CAAC,SAAS,SAAS,SAAS,UAAU;AAAA,EAC/F,GAAG;AAAA,IACD,oBAAoB,SAAS,WAAW,cAAc,SAAS,UAAU;AAAA,EAC3E,CAAC;AAAA,EACD,SAAS;AACX;AACA,IAAM,eAAN,MAAM,sBAAqB,UAAU;AAAA,EACnC,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,eAAe;AAAA,EACf,OAAO,OAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,qBAAqB,mBAAmB;AACtD,cAAQ,8BAA8B,4BAA+B,sBAAsB,aAAY,IAAI,qBAAqB,aAAY;AAAA,IAC9I;AAAA,EACF,GAAG;AAAA,EACH,OAAO,QAA0B,mBAAmB;AAAA,IAClD,OAAO;AAAA,IACP,SAAS,cAAa;AAAA,EACxB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,EACR,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AAUH,IAAI;AAAA,CACH,SAAUA,iBAAgB;AAIzB,EAAAA,gBAAe,MAAM,IAAI;AAIzB,EAAAA,gBAAe,SAAS,IAAI;AAC9B,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAM1C,IAAM,UAAN,MAAM,iBAAgB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,EAKT,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKP;AAAA,EACA,kBAAkB,OAAO,YAAY;AAAA,EACrC,OAAO,OAAuB,uBAAM;AAClC,QAAI;AACJ,WAAO,SAAS,gBAAgB,mBAAmB;AACjD,cAAQ,yBAAyB,uBAA0B,sBAAsB,QAAO,IAAI,qBAAqB,QAAO;AAAA,IAC1H;AAAA,EACF,GAAG;AAAA,EACH,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,WAAW,CAAC;AAAA,IACzB,WAAW,CAAC,gBAAgB,WAAW,QAAQ,WAAW;AAAA,IAC1D,UAAU;AAAA,IACV,cAAc,SAAS,qBAAqB,IAAI,KAAK;AACnD,UAAI,KAAK,GAAG;AACV,QAAG,YAAY,oBAAoB,IAAI,MAAM;AAC7C,QAAG,WAAW,IAAI,GAAG,MAAM,CAAC;AAC5B,QAAG,WAAW,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,UAAU,CAAC;AAAA,MACtD;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,UAAU,CAAI,mBAAmB,CAAC,YAAY,CAAC,GAAM,0BAA0B;AAAA,IAC/E,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU,SAAS,iBAAiB,IAAI,KAAK;AAC3C,UAAI,KAAK,GAAG;AACV,QAAG,gBAAgB;AACnB,QAAG,eAAe,GAAG,KAAK;AAC1B,QAAG,aAAa,CAAC;AACjB,QAAG,aAAa;AAAA,MAClB;AACA,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,IAAI,GAAG,SAAS,CAAC;AAAA,MACjC;AAAA,IACF;AAAA,IACA,cAAc,CAAC,cAAc,YAAY;AAAA,IACzC,eAAe;AAAA,IACf,iBAAiB;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,SAAS,CAAC;AAAA,IAChF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS,CAAC,cAAc,YAAY;AAAA,MACpC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,MAKV,iBAAiB,wBAAwB;AAAA,MACzC,eAAe,kBAAkB;AAAA,MACjC,MAAM;AAAA,QACJ,2BAA2B;AAAA,QAC3B,gBAAgB;AAAA,QAChB,MAAM;AAAA,QACN,WAAW;AAAA,QACX,WAAW;AAAA,MACb;AAAA,MACA,WAAW,CAAC,YAAY;AAAA,IAC1B,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,IACD,OAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,gBAAN,MAAM,eAAc;AAAA,EAClB,OAAO,OAAO,SAAS,sBAAsB,mBAAmB;AAC9D,WAAO,KAAK,qBAAqB,gBAAe;AAAA,EAClD;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS,CAAC,OAAO;AAAA,IACjB,SAAS,CAAC,OAAO;AAAA,EACnB,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,SAAS,CAAC,OAAO;AAAA,EACnB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,eAAe,CAAC;AAAA,IACtF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,OAAO;AAAA,MACjB,SAAS,CAAC,OAAO;AAAA,IACnB,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["DividerClasses"]
}
