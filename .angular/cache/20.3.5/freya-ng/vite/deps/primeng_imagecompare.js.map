{
  "version": 3,
  "sources": ["../../../../../../node_modules/primeng/fesm2022/primeng-imagecompare.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, ContentChildren, ContentChild, Input, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/imagecompare';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = [\"left\"];\nconst _c1 = [\"right\"];\nfunction ImageCompare_0_ng_template_0_Template(rf, ctx) {}\nfunction ImageCompare_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ImageCompare_0_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction ImageCompare_1_ng_template_0_Template(rf, ctx) {}\nfunction ImageCompare_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ImageCompare_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst classes = {\n  root: 'p-imagecompare',\n  slider: 'p-imagecompare-slider'\n};\nclass ImageCompareStyle extends BaseStyle {\n  name = 'imagecompare';\n  theme = style;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵImageCompareStyle_BaseFactory;\n    return function ImageCompareStyle_Factory(__ngFactoryType__) {\n      return (ɵImageCompareStyle_BaseFactory || (ɵImageCompareStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ImageCompareStyle)))(__ngFactoryType__ || ImageCompareStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ImageCompareStyle,\n    factory: ImageCompareStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageCompareStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * ImageCompare compares two images side by side with a slider.\n *\n * [Live Demo](https://www.primeng.org/imagecompare/)\n *\n * @module imagecomparestyle\n *\n */\nvar ImageCompareClasses;\n(function (ImageCompareClasses) {\n  /**\n   * Class name of the root element\n   */\n  ImageCompareClasses[\"root\"] = \"p-imagecompare\";\n  /**\n   * Class name of the slider element\n   */\n  ImageCompareClasses[\"slider\"] = \"p-imagecompare-slider\";\n})(ImageCompareClasses || (ImageCompareClasses = {}));\n\n/**\n * Compare two images side by side with a slider.\n * @group Components\n */\nclass ImageCompare extends BaseComponent {\n  /**\n   * Index of the element in tabbing order.\n   * @defaultValue 0\n   * @group Props\n   */\n  tabindex;\n  /**\n   * Defines a string value that labels an interactive element.\n   * @group Props\n   */\n  ariaLabelledby;\n  /**\n   * Identifier of the underlying input element.\n   * @group Props\n   */\n  ariaLabel;\n  /**\n   * Template for the left side.\n   * @group Templates\n   */\n  leftTemplate;\n  /**\n   * Template for the right side.\n   * @group Templates\n   */\n  rightTemplate;\n  _leftTemplate;\n  _rightTemplate;\n  templates;\n  _componentStyle = inject(ImageCompareStyle);\n  mutationObserver;\n  isRTL = false;\n  ngOnInit() {\n    super.ngOnInit();\n    this.updateDirection();\n    this.observeDirectionChanges();\n  }\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'left':\n          this._leftTemplate = item.template;\n          break;\n        case 'right':\n          this._rightTemplate = item.template;\n          break;\n      }\n    });\n  }\n  onSlide(event) {\n    const value = event.target.value;\n    const image = event.target.previousElementSibling;\n    if (this.isRTL) {\n      image.style.clipPath = `polygon(${100 - value}% 0, 100% 0, 100% 100%, ${100 - value}% 100%)`;\n    } else {\n      image.style.clipPath = `polygon(0 0, ${value}% 0, ${value}% 100%, 0 100%)`;\n    }\n  }\n  updateDirection() {\n    this.isRTL = !!this.el.nativeElement.closest('[dir=\"rtl\"]');\n  }\n  observeDirectionChanges() {\n    if (isPlatformBrowser(this.platformId)) {\n      const targetNode = document?.documentElement;\n      const config = {\n        attributes: true,\n        attributeFilter: ['dir']\n      };\n      this.mutationObserver = new MutationObserver(() => {\n        this.updateDirection();\n      });\n      this.mutationObserver.observe(targetNode, config);\n    }\n  }\n  ngOnDestroy() {\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n    super.ngOnDestroy();\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵImageCompare_BaseFactory;\n    return function ImageCompare_Factory(__ngFactoryType__) {\n      return (ɵImageCompare_BaseFactory || (ɵImageCompare_BaseFactory = i0.ɵɵgetInheritedFactory(ImageCompare)))(__ngFactoryType__ || ImageCompare);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ImageCompare,\n    selectors: [[\"p-imageCompare\"], [\"p-imagecompare\"], [\"p-image-compare\"]],\n    contentQueries: function ImageCompare_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leftTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rightTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 5,\n    hostBindings: function ImageCompare_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassMap(ctx.cx(\"root\"));\n      }\n    },\n    inputs: {\n      tabindex: \"tabindex\",\n      ariaLabelledby: \"ariaLabelledby\",\n      ariaLabel: \"ariaLabel\"\n    },\n    features: [i0.ɵɵProvidersFeature([ImageCompareStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 4,\n    consts: [[4, \"ngTemplateOutlet\"], [\"type\", \"range\", \"min\", \"0\", \"max\", \"100\", \"value\", \"50\", 3, \"input\"]],\n    template: function ImageCompare_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ImageCompare_0_Template, 1, 0, null, 0)(1, ImageCompare_1_Template, 1, 0, null, 0);\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"input\", function ImageCompare_Template_input_input_2_listener($event) {\n          return ctx.onSlide($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.leftTemplate || ctx._leftTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.rightTemplate || ctx._rightTemplate);\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.cx(\"slider\"));\n      }\n    },\n    dependencies: [CommonModule, i1.NgTemplateOutlet, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageCompare, [{\n    type: Component,\n    args: [{\n      selector: 'p-imageCompare, p-imagecompare, p-image-compare',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: `\n        <ng-template *ngTemplateOutlet=\"leftTemplate || _leftTemplate\"></ng-template>\n        <ng-template *ngTemplateOutlet=\"rightTemplate || _rightTemplate\"></ng-template>\n\n        <input type=\"range\" min=\"0\" max=\"100\" value=\"50\" (input)=\"onSlide($event)\" [class]=\"cx('slider')\" />\n    `,\n      host: {\n        '[class]': \"cx('root')\",\n        '[attr.tabindex]': 'tabindex',\n        '[attr.aria-labelledby]': 'ariaLabelledby',\n        '[attr.aria-label]': 'ariaLabel'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [ImageCompareStyle]\n    }]\n  }], null, {\n    tabindex: [{\n      type: Input\n    }],\n    ariaLabelledby: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input\n    }],\n    leftTemplate: [{\n      type: ContentChild,\n      args: ['left', {\n        descendants: false\n      }]\n    }],\n    rightTemplate: [{\n      type: ContentChild,\n      args: ['right', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass ImageCompareModule {\n  static ɵfac = function ImageCompareModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ImageCompareModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ImageCompareModule,\n    imports: [ImageCompare, SharedModule],\n    exports: [ImageCompare, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [ImageCompare, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageCompareModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ImageCompare, SharedModule],\n      exports: [ImageCompare, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ImageCompare, ImageCompareClasses, ImageCompareModule, ImageCompareStyle };\n"],
  "mappings": "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",
  "names": ["ImageCompareClasses"]
}
