{
  "version": 3,
  "sources": ["../../../../../../node_modules/primeng/fesm2022/primeng-metergroup.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, inject, forwardRef, Input, Component, ContentChildren, ContentChild, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { getOuterHeight } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { style } from '@primeuix/styles/metergroup';\nimport { BaseStyle } from 'primeng/base';\nconst _c0 = (a0, a1) => ({\n  $implicit: a0,\n  icon: a1\n});\nconst _c1 = a0 => ({\n  color: a0\n});\nconst _c2 = a0 => ({\n  backgroundColor: a0\n});\nfunction MeterGroupLabel_li_1_ng_container_1_i_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 5);\n  }\n  if (rf & 2) {\n    const labelItem_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(labelItem_r1.icon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.cx(\"labelIcon\"))(\"ngStyle\", i0.ɵɵpureFunction1(4, _c1, labelItem_r1.color));\n  }\n}\nfunction MeterGroupLabel_li_1_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n  if (rf & 2) {\n    const labelItem_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.cx(\"labelMarker\"));\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c2, labelItem_r1.color));\n  }\n}\nfunction MeterGroupLabel_li_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MeterGroupLabel_li_1_ng_container_1_i_1_Template, 1, 6, \"i\", 3)(2, MeterGroupLabel_li_1_ng_container_1_span_2_Template, 1, 5, \"span\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const labelItem_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", labelItem_r1.icon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !labelItem_r1.icon);\n  }\n}\nfunction MeterGroupLabel_li_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroupLabel_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, MeterGroupLabel_li_1_ng_container_1_Template, 3, 2, \"ng-container\", 1)(2, MeterGroupLabel_li_1_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const labelItem_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.cx(\"label\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.iconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.iconTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(9, _c0, labelItem_r1, labelItem_r1.icon));\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r1.cx(\"labelText\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", labelItem_r1.label, \" (\", ctx_r1.parentInstance.percentValue(labelItem_r1.value), \")\");\n  }\n}\nconst _c3 = [\"label\"];\nconst _c4 = [\"meter\"];\nconst _c5 = [\"end\"];\nconst _c6 = [\"start\"];\nconst _c7 = [\"icon\"];\nconst _c8 = (a0, a1, a2) => ({\n  $implicit: a0,\n  totalPercent: a1,\n  percentages: a2\n});\nconst _c9 = (a0, a1, a2, a3, a4, a5) => ({\n  $implicit: a0,\n  index: a1,\n  orientation: a2,\n  class: a3,\n  size: a4,\n  totalPercent: a5\n});\nfunction MeterGroup_Conditional_0_p_meterGroupLabel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-meterGroupLabel\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.value)(\"labelPosition\", ctx_r0.labelPosition)(\"labelOrientation\", ctx_r0.labelOrientation)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"iconTemplate\", ctx_r0.iconTemplate || ctx_r0._iconTemplate);\n  }\n}\nfunction MeterGroup_Conditional_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroup_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MeterGroup_Conditional_0_p_meterGroupLabel_0_Template, 1, 6, \"p-meterGroupLabel\", 2)(1, MeterGroup_Conditional_0_ng_container_1_Template, 1, 0, \"ng-container\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.labelTemplate && !ctx_r0._labelTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.labelTemplate || ctx_r0.labelTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(3, _c8, ctx_r0.value, ctx_r0.totalPercent(), ctx_r0.percentages()));\n  }\n}\nfunction MeterGroup_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroup_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroup_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const meterItem_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r0.cx(\"meter\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.meterStyle(meterItem_r2));\n  }\n}\nfunction MeterGroup_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MeterGroup_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 0)(2, MeterGroup_ng_container_3_ng_container_2_Template, 2, 3, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const meterItem_r2 = ctx.$implicit;\n    const index_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.meterTemplate || ctx_r0._meterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction6(3, _c9, meterItem_r2, index_r3, ctx_r0.orientation, ctx_r0.cx(\"meter\"), ctx_r0.percentValue(meterItem_r2.value), ctx_r0.totalPercent()));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.meterTemplate && !ctx_r0._meterTemplate && meterItem_r2.value > 0);\n  }\n}\nfunction MeterGroup_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroup_Conditional_5_p_meterGroupLabel_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-meterGroupLabel\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r0.value)(\"labelPosition\", ctx_r0.labelPosition)(\"labelOrientation\", ctx_r0.labelOrientation)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"iconTemplate\", ctx_r0.iconTemplate || ctx_r0._iconTemplate);\n  }\n}\nfunction MeterGroup_Conditional_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MeterGroup_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MeterGroup_Conditional_5_p_meterGroupLabel_0_Template, 1, 6, \"p-meterGroupLabel\", 2)(1, MeterGroup_Conditional_5_ng_container_1_Template, 1, 0, \"ng-container\", 0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.labelTemplate && !ctx_r0._labelTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.labelTemplate || ctx_r0._labelTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(3, _c8, ctx_r0.value, ctx_r0.totalPercent(), ctx_r0.percentages()));\n  }\n}\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-metergroup p-component', {\n    'p-metergroup-horizontal': instance.orientation === 'horizontal',\n    'p-metergroup-vertical': instance.orientation === 'vertical'\n  }],\n  meters: 'p-metergroup-meters',\n  meter: 'p-metergroup-meter',\n  labelList: ({\n    instance\n  }) => ['p-metergroup-label-list', {\n    'p-metergroup-label-list-vertical': instance.labelOrientation === 'vertical',\n    'p-metergroup-label-list-horizontal': instance.labelOrientation === 'horizontal'\n  }],\n  label: 'p-metergroup-label',\n  labelIcon: 'p-metergroup-label-icon',\n  labelMarker: 'p-metergroup-label-marker',\n  labelText: 'p-metergroup-label-text'\n};\nclass MeterGroupStyle extends BaseStyle {\n  name = 'metergroup';\n  theme = style;\n  classes = classes;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMeterGroupStyle_BaseFactory;\n    return function MeterGroupStyle_Factory(__ngFactoryType__) {\n      return (ɵMeterGroupStyle_BaseFactory || (ɵMeterGroupStyle_BaseFactory = i0.ɵɵgetInheritedFactory(MeterGroupStyle)))(__ngFactoryType__ || MeterGroupStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MeterGroupStyle,\n    factory: MeterGroupStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MeterGroupStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * MeterGroup is a group of process status indicators.\n *\n * [Live Demo](https://www.primeng.org/metergroup)\n *\n * @module metergroupstyle\n *\n */\nvar MeterGroupClasses;\n(function (MeterGroupClasses) {\n  /**\n   * Class name of the root element\n   */\n  MeterGroupClasses[\"root\"] = \"p-metergroup\";\n  /**\n   * Class name of the meters element\n   */\n  MeterGroupClasses[\"meters\"] = \"p-metergroup-meters\";\n  /**\n   * Class name of the meter element\n   */\n  MeterGroupClasses[\"meter\"] = \"p-metergroup-meter\";\n  /**\n   * Class name of the label list element\n   */\n  MeterGroupClasses[\"labelList\"] = \"p-metergroup-label-list\";\n  /**\n   * Class name of the label element\n   */\n  MeterGroupClasses[\"label\"] = \"p-metergroup-label\";\n  /**\n   * Class name of the label icon element\n   */\n  MeterGroupClasses[\"labelIcon\"] = \"p-metergroup-label-icon\";\n  /**\n   * Class name of the label marker element\n   */\n  MeterGroupClasses[\"labelMarker\"] = \"p-metergroup-label-marker\";\n  /**\n   * Class name of the label text element\n   */\n  MeterGroupClasses[\"labelText\"] = \"p-metergroup-label-text\";\n})(MeterGroupClasses || (MeterGroupClasses = {}));\nclass MeterGroupLabel extends BaseComponent {\n  value = [];\n  labelPosition = 'end';\n  labelOrientation = 'horizontal';\n  min;\n  max;\n  iconTemplate;\n  parentInstance = inject(forwardRef(() => MeterGroup));\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMeterGroupLabel_BaseFactory;\n    return function MeterGroupLabel_Factory(__ngFactoryType__) {\n      return (ɵMeterGroupLabel_BaseFactory || (ɵMeterGroupLabel_BaseFactory = i0.ɵɵgetInheritedFactory(MeterGroupLabel)))(__ngFactoryType__ || MeterGroupLabel);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MeterGroupLabel,\n    selectors: [[\"p-meterGroupLabel\"], [\"p-metergrouplabel\"]],\n    inputs: {\n      value: \"value\",\n      labelPosition: \"labelPosition\",\n      labelOrientation: \"labelOrientation\",\n      min: \"min\",\n      max: \"max\",\n      iconTemplate: \"iconTemplate\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[3, \"class\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"class\", \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [3, \"class\", \"ngStyle\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"ngStyle\"]],\n    template: function MeterGroupLabel_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ol\");\n        i0.ɵɵtemplate(1, MeterGroupLabel_li_1_Template, 5, 12, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.cx(\"labelList\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.value)(\"ngForTrackBy\", ctx.parentInstance.trackByFn);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SharedModule],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MeterGroupLabel, [{\n    type: Component,\n    args: [{\n      selector: 'p-meterGroupLabel, p-metergrouplabel',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: `\n        <ol [class]=\"cx('labelList')\">\n            <li *ngFor=\"let labelItem of value; let index = index; trackBy: parentInstance.trackByFn\" [class]=\"cx('label')\">\n                <ng-container *ngIf=\"!iconTemplate\">\n                    <i *ngIf=\"labelItem.icon\" [class]=\"labelItem.icon\" [ngClass]=\"cx('labelIcon')\" [ngStyle]=\"{ color: labelItem.color }\"></i>\n                    <span *ngIf=\"!labelItem.icon\" [class]=\"cx('labelMarker')\" [ngStyle]=\"{ backgroundColor: labelItem.color }\"></span>\n                </ng-container>\n                <ng-container *ngTemplateOutlet=\"iconTemplate; context: { $implicit: labelItem, icon: labelItem.icon }\"></ng-container>\n                <span [class]=\"cx('labelText')\">{{ labelItem.label }} ({{ parentInstance.percentValue(labelItem.value) }})</span>\n            </li>\n        </ol>\n    `\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    labelOrientation: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    iconTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * MeterGroup displays scalar measurements within a known range.\n * @group Components\n */\nclass MeterGroup extends BaseComponent {\n  /**\n   * Current value of the metergroup.\n   * @group Props\n   */\n  value;\n  /**\n   * Mininum boundary value.\n   * @group Props\n   */\n  min = 0;\n  /**\n   * Maximum boundary value.\n   * @group Props\n   */\n  max = 100;\n  /**\n   * Specifies the layout of the component, valid values are 'horizontal' and 'vertical'.\n   * @group Props\n   */\n  orientation = 'horizontal';\n  /**\n   * Specifies the label position of the component, valid values are 'start' and 'end'.\n   * @group Props\n   */\n  labelPosition = 'end';\n  /**\n   * Specifies the label orientation of the component, valid values are 'horizontal' and 'vertical'.\n   * @group Props\n   */\n  labelOrientation = 'horizontal';\n  /**\n   * Style class of the element.\n   * @deprecated since v20.0.0, use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  get vertical() {\n    return this.orientation === 'vertical';\n  }\n  labelTemplate;\n  meterTemplate;\n  endTemplate;\n  startTemplate;\n  iconTemplate;\n  templates;\n  _labelTemplate;\n  _meterTemplate;\n  _endTemplate;\n  _startTemplate;\n  _iconTemplate;\n  _componentStyle = inject(MeterGroupStyle);\n  constructor() {\n    super();\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    const _container = this.el.nativeElement;\n    const height = getOuterHeight(_container);\n    this.vertical && (_container.style.height = height + 'px');\n  }\n  ngAfterContentInit() {\n    this.templates?.forEach(item => {\n      switch (item.getType()) {\n        case 'label':\n          this._labelTemplate = item.template;\n          break;\n        case 'meter':\n          this._meterTemplate = item.template;\n          break;\n        case 'icon':\n          this._iconTemplate = item.template;\n          break;\n        case 'start':\n          this._startTemplate = item.template;\n          break;\n        case 'end':\n          this._endTemplate = item.template;\n          break;\n      }\n    });\n  }\n  percent(meter = 0) {\n    if (this.max === this.min) {\n      return 100; // When min = max, any value should be 100%\n    }\n    const percentOfItem = (meter - this.min) / (this.max - this.min) * 100;\n    return Math.round(Math.max(0, Math.min(100, percentOfItem)));\n  }\n  percentValue(meter) {\n    return this.percent(meter) + '%';\n  }\n  meterStyle(val) {\n    return {\n      backgroundColor: val.color,\n      width: this.orientation === 'horizontal' && this.percentValue(val.value || 0),\n      height: this.orientation === 'vertical' && this.percentValue(val.value || 0)\n    };\n  }\n  totalPercent() {\n    if (!this.value) {\n      return 0;\n    }\n    return this.percent(this.value.reduce((total, val) => total + (val.value || 0), 0));\n  }\n  percentages() {\n    if (!this.value) {\n      return [];\n    }\n    let sum = 0;\n    const sumsArray = [];\n    this.value.forEach(item => {\n      sum += item.value || 0;\n      sumsArray.push(sum);\n    });\n    return sumsArray;\n  }\n  trackByFn(index) {\n    return index;\n  }\n  static ɵfac = function MeterGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MeterGroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MeterGroup,\n    selectors: [[\"p-meterGroup\"], [\"p-metergroup\"], [\"p-meter-group\"]],\n    contentQueries: function MeterGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c3, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c5, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c6, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 4);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.meterTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.endTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.startTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.iconTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    hostVars: 6,\n    hostBindings: function MeterGroup_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuemin\", ctx.min)(\"role\", \"meter\")(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.totalPercent());\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      value: \"value\",\n      min: \"min\",\n      max: \"max\",\n      orientation: \"orientation\",\n      labelPosition: \"labelPosition\",\n      labelOrientation: \"labelOrientation\",\n      styleClass: \"styleClass\"\n    },\n    features: [i0.ɵɵProvidersFeature([MeterGroupStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 18,\n    consts: [[4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"value\", \"labelPosition\", \"labelOrientation\", \"min\", \"max\", \"iconTemplate\", 4, \"ngIf\"], [3, \"value\", \"labelPosition\", \"labelOrientation\", \"min\", \"max\", \"iconTemplate\"], [4, \"ngIf\"], [3, \"ngStyle\"]],\n    template: function MeterGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵconditionalCreate(0, MeterGroup_Conditional_0_Template, 2, 7);\n        i0.ɵɵtemplate(1, MeterGroup_ng_container_1_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtemplate(3, MeterGroup_ng_container_3_Template, 3, 10, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, MeterGroup_ng_container_4_Template, 1, 0, \"ng-container\", 0);\n        i0.ɵɵconditionalCreate(5, MeterGroup_Conditional_5_Template, 2, 7);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx.labelPosition === \"start\" ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.startTemplate || ctx._startTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(10, _c8, ctx.value, ctx.totalPercent(), ctx.percentages()));\n        i0.ɵɵadvance();\n        i0.ɵɵclassMap(ctx.cx(\"meters\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.value)(\"ngForTrackBy\", ctx.trackByFn);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.endTemplate || ctx._endTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(14, _c8, ctx.value, ctx.totalPercent(), ctx.percentages()));\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.labelPosition === \"end\" ? 5 : -1);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, MeterGroupLabel, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MeterGroup, [{\n    type: Component,\n    args: [{\n      selector: 'p-meterGroup, p-metergroup, p-meter-group',\n      standalone: true,\n      imports: [CommonModule, MeterGroupLabel, SharedModule],\n      template: `\n        @if (labelPosition === 'start') {\n            <p-meterGroupLabel *ngIf=\"!labelTemplate && !_labelTemplate\" [value]=\"value\" [labelPosition]=\"labelPosition\" [labelOrientation]=\"labelOrientation\" [min]=\"min\" [max]=\"max\" [iconTemplate]=\"iconTemplate || _iconTemplate\" />\n            <ng-container *ngTemplateOutlet=\"labelTemplate || labelTemplate; context: { $implicit: value, totalPercent: totalPercent(), percentages: percentages() }\"></ng-container>\n        }\n        <ng-container *ngTemplateOutlet=\"startTemplate || _startTemplate; context: { $implicit: value, totalPercent: totalPercent(), percentages: percentages() }\"></ng-container>\n        <div [class]=\"cx('meters')\">\n            <ng-container *ngFor=\"let meterItem of value; let index = index; trackBy: trackByFn\">\n                <ng-container\n                    *ngTemplateOutlet=\"\n                        meterTemplate || _meterTemplate;\n                        context: {\n                            $implicit: meterItem,\n                            index: index,\n                            orientation: this.orientation,\n                            class: cx('meter'),\n                            size: percentValue(meterItem.value),\n                            totalPercent: totalPercent()\n                        }\n                    \"\n                >\n                </ng-container>\n                <ng-container *ngIf=\"!meterTemplate && !_meterTemplate && meterItem.value > 0\">\n                    <span [class]=\"cx('meter')\" [ngStyle]=\"meterStyle(meterItem)\"></span>\n                </ng-container>\n            </ng-container>\n        </div>\n        <ng-container *ngTemplateOutlet=\"endTemplate || _endTemplate; context: { $implicit: value, totalPercent: totalPercent(), percentages: percentages() }\"></ng-container>\n        @if (labelPosition === 'end') {\n            <p-meterGroupLabel *ngIf=\"!labelTemplate && !_labelTemplate\" [value]=\"value\" [labelPosition]=\"labelPosition\" [labelOrientation]=\"labelOrientation\" [min]=\"min\" [max]=\"max\" [iconTemplate]=\"iconTemplate || _iconTemplate\" />\n            <ng-container *ngTemplateOutlet=\"labelTemplate || _labelTemplate; context: { $implicit: value, totalPercent: totalPercent(), percentages: percentages() }\"></ng-container>\n        }\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      providers: [MeterGroupStyle],\n      host: {\n        '[attr.aria-valuemin]': 'min',\n        '[attr.role]': '\"meter\"',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'totalPercent()',\n        '[class]': \"cn(cx('root'), styleClass)\"\n      }\n    }]\n  }], () => [], {\n    value: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    labelOrientation: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    labelTemplate: [{\n      type: ContentChild,\n      args: ['label', {\n        descendants: false\n      }]\n    }],\n    meterTemplate: [{\n      type: ContentChild,\n      args: ['meter', {\n        descendants: false\n      }]\n    }],\n    endTemplate: [{\n      type: ContentChild,\n      args: ['end', {\n        descendants: false\n      }]\n    }],\n    startTemplate: [{\n      type: ContentChild,\n      args: ['start', {\n        descendants: false\n      }]\n    }],\n    iconTemplate: [{\n      type: ContentChild,\n      args: ['icon', {\n        descendants: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\nclass MeterGroupModule {\n  static ɵfac = function MeterGroupModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MeterGroupModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MeterGroupModule,\n    imports: [MeterGroup, SharedModule],\n    exports: [MeterGroup, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MeterGroup, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MeterGroupModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MeterGroup, SharedModule],\n      exports: [MeterGroup, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MeterGroup, MeterGroupClasses, MeterGroupLabel, MeterGroupModule, MeterGroupStyle };\n"],
  "mappings": "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",
  "names": ["MeterGroupClasses"]
}
