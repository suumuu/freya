{
  "version": 3,
  "sources": ["../../../../../../node_modules/primeng/fesm2022/primeng-splitter.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, contentChild, forwardRef, computed, inject, numberAttribute, ContentChildren, Output, Input, ChangeDetectionStrategy, ViewEncapsulation, Component, NgModule } from '@angular/core';\nimport { hasClass, getWidth, getHeight, getOuterWidth, getOuterHeight, addClass, isRTL, removeClass } from '@primeuix/utils';\nimport { SharedModule, PrimeTemplate } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { BaseStyle } from 'primeng/base';\nimport { style } from '@primeuix/styles/splitter';\nconst _c0 = [\"panel\"];\nfunction Splitter_ng_template_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Splitter_ng_template_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"mousedown\", function Splitter_ng_template_0_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterMouseDown($event, i_r2));\n    })(\"touchstart\", function Splitter_ng_template_0_div_2_Template_div_touchstart_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchStart($event, i_r2));\n    })(\"touchmove\", function Splitter_ng_template_0_div_2_Template_div_touchmove_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchMove($event));\n    })(\"touchend\", function Splitter_ng_template_0_div_2_Template_div_touchend_0_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterTouchEnd($event));\n    });\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵlistener(\"keyup\", function Splitter_ng_template_0_div_2_Template_div_keyup_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onGutterKeyUp($event));\n    })(\"keydown\", function Splitter_ng_template_0_div_2_Template_div_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onGutterKeyDown($event, i_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.cx(\"gutter\"));\n    i0.ɵɵattribute(\"data-p-gutter-resizing\", false)(\"data-pc-section\", \"gutter\");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.cx(\"gutterHandle\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.gutterStyle());\n    i0.ɵɵattribute(\"aria-orientation\", ctx_r2.layout)(\"aria-valuenow\", ctx_r2.prevSize)(\"data-pc-section\", \"gutterhandle\");\n  }\n}\nfunction Splitter_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, Splitter_ng_template_0_ng_container_1_Template, 1, 0, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, Splitter_ng_template_0_div_2_Template, 2, 10, \"div\", 3);\n  }\n  if (rf & 2) {\n    const panel_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.cn(ctx_r2.cx(\"panel\"), ctx_r2.panelStyleClass));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.panelStyle);\n    i0.ɵɵattribute(\"data-pc-name\", \"splitterpanel\")(\"data-pc-section\", \"panel\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", panel_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r2 !== ctx_r2.panels.length - 1);\n  }\n}\nconst classes = {\n  root: ({\n    instance\n  }) => ['p-splitter p-component', 'p-splitter-' + instance.layout],\n  panel: ({\n    instance\n  }) => ['p-splitterpanel', {\n    'p-splitterpanel-nested': instance.nestedState()\n  }],\n  gutter: 'p-splitter-gutter',\n  gutterHandle: 'p-splitter-gutter-handle'\n};\nconst inlineStyles = {\n  root: ({\n    instance\n  }) => [{\n    display: 'flex',\n    'flex-wrap': 'nowrap'\n  }, instance.layout === 'vertical' ? {\n    'flex-direction': 'column'\n  } : '']\n};\nclass SplitterStyle extends BaseStyle {\n  name = 'splitter';\n  theme = style;\n  classes = classes;\n  inlineStyles = inlineStyles;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSplitterStyle_BaseFactory;\n    return function SplitterStyle_Factory(__ngFactoryType__) {\n      return (ɵSplitterStyle_BaseFactory || (ɵSplitterStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SplitterStyle)))(__ngFactoryType__ || SplitterStyle);\n    };\n  })();\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SplitterStyle,\n    factory: SplitterStyle.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterStyle, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n *\n * Splitter is utilized to separate and resize panels.\n *\n * [Live Demo](https://www.primeng.org/splitter/)\n *\n * @module splitterstyle\n *\n */\nvar SplitterClasses;\n(function (SplitterClasses) {\n  /**\n   * Class name of the root element\n   */\n  SplitterClasses[\"root\"] = \"p-splitter\";\n  /**\n   * Class name of the gutter element\n   */\n  SplitterClasses[\"gutter\"] = \"p-splitter-gutter\";\n  /**\n   * Class name of the gutter handle element\n   */\n  SplitterClasses[\"gutterHandle\"] = \"p-splitter-gutter-handle\";\n})(SplitterClasses || (SplitterClasses = {}));\n\n/**\n * Splitter is utilized to separate and resize panels.\n * @group Components\n */\nclass Splitter extends BaseComponent {\n  /**\n   * Style class of the component.\n   * @deprecated since v20. Use `class` instead.\n   * @group Props\n   */\n  styleClass;\n  /**\n   * Style class of the panel.\n   * @group Props\n   */\n  panelStyleClass;\n  /**\n   * Inline style of the panel.\n   * @group Props\n   */\n  panelStyle;\n  /**\n   * Defines where a stateful splitter keeps its state, valid values are 'session' for sessionStorage and 'local' for localStorage.\n   * @group Props\n   */\n  stateStorage = 'session';\n  /**\n   * Storage identifier of a stateful Splitter.\n   * @group Props\n   */\n  stateKey = null;\n  /**\n   * Orientation of the panels. Valid values are 'horizontal' and 'vertical'.\n   * @group Props\n   */\n  layout = 'horizontal';\n  /**\n   * Size of the divider in pixels.\n   * @group Props\n   */\n  gutterSize = 4;\n  /**\n   * Step factor to increment/decrement the size of the panels while pressing the arrow keys.\n   * @group Props\n   */\n  step = 5;\n  /**\n   * Minimum size of the elements relative to 100%.\n   * @group Props\n   */\n  minSizes = [];\n  /**\n   * Size of the elements relative to 100%.\n   * @group Props\n   */\n  get panelSizes() {\n    return this._panelSizes;\n  }\n  set panelSizes(val) {\n    this._panelSizes = val;\n    if (this.el && this.el.nativeElement && this.panels.length > 0) {\n      let children = [...this.el.nativeElement.children].filter(child => hasClass(child, 'p-splitterpanel'));\n      let _panelSizes = [];\n      this.panels.map((panel, i) => {\n        let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n        let panelSize = panelInitialSize || 100 / this.panels.length;\n        _panelSizes[i] = panelSize;\n        children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n    }\n  }\n  /**\n   * Callback to invoke when resize ends.\n   * @param {SplitterResizeEndEvent} event - Custom panel resize end event\n   * @group Emits\n   */\n  onResizeEnd = new EventEmitter();\n  /**\n   * Callback to invoke when resize starts.\n   * @param {SplitterResizeStartEvent} event - Custom panel resize start event\n   * @group Emits\n   */\n  onResizeStart = new EventEmitter();\n  templates;\n  panelChildren;\n  splitter = contentChild(forwardRef(() => Splitter), ...(ngDevMode ? [{\n    debugName: \"splitter\"\n  }] : []));\n  nestedState = computed(() => this.splitter(), ...(ngDevMode ? [{\n    debugName: \"nestedState\"\n  }] : []));\n  panels = [];\n  dragging = false;\n  mouseMoveListener;\n  mouseUpListener;\n  touchMoveListener;\n  touchEndListener;\n  size;\n  gutterElement;\n  startPos;\n  prevPanelElement;\n  nextPanelElement;\n  nextPanelSize;\n  prevPanelSize;\n  _panelSizes = [];\n  prevPanelIndex;\n  timer;\n  prevSize;\n  _componentStyle = inject(SplitterStyle);\n  ngOnInit() {\n    super.ngOnInit();\n  }\n  ngAfterContentInit() {\n    if (this.templates && this.templates.toArray().length > 0) {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'panel':\n            this.panels.push(item.template);\n            break;\n          default:\n            this.panels.push(item.template);\n            break;\n        }\n      });\n    }\n    if (this.panelChildren && this.panelChildren.toArray().length > 0) {\n      this.panelChildren.forEach(item => {\n        this.panels.push(item);\n      });\n    }\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.panels && this.panels.length) {\n        let initialized = false;\n        if (this.isStateful()) {\n          initialized = this.restoreState();\n        }\n        if (!initialized) {\n          let children = [...this.el.nativeElement.children].filter(child => hasClass(child, 'p-splitterpanel'));\n          let _panelSizes = [];\n          this.panels.map((panel, i) => {\n            let panelInitialSize = this.panelSizes.length - 1 >= i ? this.panelSizes[i] : null;\n            let panelSize = panelInitialSize || 100 / this.panels.length;\n            _panelSizes[i] = panelSize;\n            children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n          });\n          this._panelSizes = _panelSizes;\n          this.prevSize = parseFloat(_panelSizes[0]).toFixed(4);\n        }\n      }\n    }\n  }\n  resizeStart(event, index, isKeyDown) {\n    this.gutterElement = event.currentTarget || event.target.parentElement;\n    this.size = this.horizontal() ? getWidth(this.el.nativeElement) : getHeight(this.el.nativeElement);\n    if (!isKeyDown) {\n      this.dragging = true;\n      this.startPos = this.horizontal() ? event instanceof MouseEvent ? event.pageX : event.changedTouches[0].pageX : event instanceof MouseEvent ? event.pageY : event.changedTouches[0].pageY;\n    }\n    this.prevPanelElement = this.gutterElement.previousElementSibling;\n    this.nextPanelElement = this.gutterElement.nextElementSibling;\n    if (isKeyDown) {\n      this.prevPanelSize = this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true);\n      this.nextPanelSize = this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true);\n    } else {\n      this.prevPanelSize = 100 * (this.horizontal() ? getOuterWidth(this.prevPanelElement, true) : getOuterHeight(this.prevPanelElement, true)) / this.size;\n      this.nextPanelSize = 100 * (this.horizontal() ? getOuterWidth(this.nextPanelElement, true) : getOuterHeight(this.nextPanelElement, true)) / this.size;\n    }\n    this.prevPanelIndex = index;\n    addClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    this.gutterElement.setAttribute('data-p-gutter-resizing', 'true');\n    addClass(this.el.nativeElement, 'p-splitter-resizing');\n    this.el.nativeElement.setAttribute('data-p-resizing', 'true');\n    this.onResizeStart.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n  }\n  onResize(event, step, isKeyDown) {\n    let newPos, newPrevPanelSize, newNextPanelSize;\n    if (isKeyDown) {\n      if (this.horizontal()) {\n        newPrevPanelSize = 100 * ((this.prevPanelSize ?? 0) + (step ?? 0)) / (this.size ?? 1);\n        newNextPanelSize = 100 * ((this.nextPanelSize ?? 0) - (step ?? 0)) / (this.size ?? 1);\n      } else {\n        newPrevPanelSize = 100 * ((this.prevPanelSize ?? 0) - (step ?? 0)) / (this.size ?? 1);\n        newNextPanelSize = 100 * ((this.nextPanelSize ?? 0) + (step ?? 0)) / (this.size ?? 1);\n      }\n    } else {\n      if (this.horizontal()) {\n        if (isRTL(this.el.nativeElement)) {\n          newPos = ((this.startPos ?? 0) - event.pageX) * 100 / (this.size ?? 1);\n        } else {\n          newPos = (event.pageX - (this.startPos ?? 0)) * 100 / (this.size ?? 1);\n        }\n      } else {\n        newPos = (event.pageY - (this.startPos ?? 0)) * 100 / (this.size ?? 1);\n      }\n      newPrevPanelSize = this.prevPanelSize + newPos;\n      newNextPanelSize = this.nextPanelSize - newPos;\n    }\n    this.prevSize = parseFloat(newPrevPanelSize).toFixed(4);\n    if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\n      this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\n      this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\n    }\n  }\n  resizeEnd(event) {\n    if (this.isStateful()) {\n      this.saveState();\n    }\n    this.onResizeEnd.emit({\n      originalEvent: event,\n      sizes: this._panelSizes\n    });\n    removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\n    removeClass(this.el.nativeElement, 'p-splitter-resizing');\n    this.clear();\n  }\n  onGutterMouseDown(event, index) {\n    this.resizeStart(event, index);\n    this.bindMouseListeners();\n  }\n  onGutterTouchStart(event, index) {\n    if (event.cancelable) {\n      this.resizeStart(event, index);\n      this.bindTouchListeners();\n      event.preventDefault();\n    }\n  }\n  onGutterTouchMove(event) {\n    this.onResize(event);\n    event.preventDefault();\n  }\n  onGutterTouchEnd(event) {\n    this.resizeEnd(event);\n    this.unbindTouchListeners();\n    if (event.cancelable) event.preventDefault();\n  }\n  repeat(event, index, step) {\n    this.resizeStart(event, index, true);\n    this.onResize(event, step, true);\n  }\n  setTimer(event, index, step) {\n    this.clearTimer();\n    this.timer = setTimeout(() => {\n      this.repeat(event, index, step);\n    }, 40);\n  }\n  clearTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n  onGutterKeyUp(event) {\n    this.clearTimer();\n    this.resizeEnd(event);\n  }\n  onGutterKeyDown(event, index) {\n    switch (event.code) {\n      case 'ArrowLeft':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowRight':\n        {\n          if (this.layout === 'horizontal') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowDown':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step * -1);\n          }\n          event.preventDefault();\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (this.layout === 'vertical') {\n            this.setTimer(event, index, this.step);\n          }\n          event.preventDefault();\n          break;\n        }\n      default:\n        //no op\n        break;\n    }\n  }\n  validateResize(newPrevPanelSize, newNextPanelSize) {\n    if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\n      return false;\n    }\n    if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\n      return false;\n    }\n    return true;\n  }\n  bindMouseListeners() {\n    if (!this.mouseMoveListener) {\n      this.mouseMoveListener = this.renderer.listen(this.document, 'mousemove', event => {\n        this.onResize(event);\n      });\n    }\n    if (!this.mouseUpListener) {\n      this.mouseUpListener = this.renderer.listen(this.document, 'mouseup', event => {\n        this.resizeEnd(event);\n        this.unbindMouseListeners();\n      });\n    }\n  }\n  bindTouchListeners() {\n    if (!this.touchMoveListener) {\n      this.touchMoveListener = this.renderer.listen(this.document, 'touchmove', event => {\n        this.onResize(event.changedTouches[0]);\n      });\n    }\n    if (!this.touchEndListener) {\n      this.touchEndListener = this.renderer.listen(this.document, 'touchend', event => {\n        this.resizeEnd(event);\n        this.unbindTouchListeners();\n      });\n    }\n  }\n  unbindMouseListeners() {\n    if (this.mouseMoveListener) {\n      this.mouseMoveListener();\n      this.mouseMoveListener = null;\n    }\n    if (this.mouseUpListener) {\n      this.mouseUpListener();\n      this.mouseUpListener = null;\n    }\n  }\n  unbindTouchListeners() {\n    if (this.touchMoveListener) {\n      this.touchMoveListener();\n      this.touchMoveListener = null;\n    }\n    if (this.touchEndListener) {\n      this.touchEndListener();\n      this.touchEndListener = null;\n    }\n  }\n  clear() {\n    this.dragging = false;\n    this.size = null;\n    this.startPos = null;\n    this.prevPanelElement = null;\n    this.nextPanelElement = null;\n    this.prevPanelSize = null;\n    this.nextPanelSize = null;\n    this.gutterElement = null;\n    this.prevPanelIndex = null;\n  }\n  isStateful() {\n    return this.stateKey != null;\n  }\n  getStorage() {\n    if (isPlatformBrowser(this.platformId)) {\n      switch (this.stateStorage) {\n        case 'local':\n          return this.document.defaultView?.localStorage;\n        case 'session':\n          return this.document.defaultView?.sessionStorage;\n        default:\n          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n      }\n    } else {\n      throw new Error('Storage is not a available by default on the server.');\n    }\n  }\n  saveState() {\n    this.getStorage()?.setItem(this.stateKey, JSON.stringify(this._panelSizes));\n  }\n  restoreState() {\n    const storage = this.getStorage();\n    const stateString = storage?.getItem(this.stateKey);\n    if (stateString) {\n      this._panelSizes = JSON.parse(stateString);\n      let children = [...this.el.nativeElement.children].filter(child => hasClass(child, 'p-splitterpanel'));\n      children.forEach((child, i) => {\n        child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + (this.panels.length - 1) * this.gutterSize + 'px)';\n      });\n      return true;\n    }\n    return false;\n  }\n  gutterStyle() {\n    if (this.horizontal()) return {\n      width: this.gutterSize + 'px'\n    };else return {\n      height: this.gutterSize + 'px'\n    };\n  }\n  horizontal() {\n    return this.layout === 'horizontal';\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵSplitter_BaseFactory;\n    return function Splitter_Factory(__ngFactoryType__) {\n      return (ɵSplitter_BaseFactory || (ɵSplitter_BaseFactory = i0.ɵɵgetInheritedFactory(Splitter)))(__ngFactoryType__ || Splitter);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Splitter,\n    selectors: [[\"p-splitter\"]],\n    contentQueries: function Splitter_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.splitter, Splitter, 5);\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        i0.ɵɵcontentQuery(dirIndex, _c0, 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.panelChildren = _t);\n      }\n    },\n    hostAttrs: [\"data-pc-name\", \"splitter\", \"data-pc-section\", \"root\"],\n    hostVars: 3,\n    hostBindings: function Splitter_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-p-gutter-resizing\", false);\n        i0.ɵɵclassMap(ctx.cn(ctx.cx(\"root\"), ctx.styleClass));\n      }\n    },\n    inputs: {\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      panelStyle: \"panelStyle\",\n      stateStorage: \"stateStorage\",\n      stateKey: \"stateKey\",\n      layout: \"layout\",\n      gutterSize: [2, \"gutterSize\", \"gutterSize\", numberAttribute],\n      step: [2, \"step\", \"step\", numberAttribute],\n      minSizes: \"minSizes\",\n      panelSizes: \"panelSizes\"\n    },\n    outputs: {\n      onResizeEnd: \"onResizeEnd\",\n      onResizeStart: \"onResizeStart\"\n    },\n    features: [i0.ɵɵProvidersFeature([SplitterStyle]), i0.ɵɵInheritDefinitionFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"tabindex\", \"-1\", 3, \"ngStyle\"], [4, \"ngTemplateOutlet\"], [\"role\", \"separator\", \"tabindex\", \"-1\", 3, \"class\", \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\", 4, \"ngIf\"], [\"role\", \"separator\", \"tabindex\", \"-1\", 3, \"mousedown\", \"touchstart\", \"touchmove\", \"touchend\"], [\"tabindex\", \"0\", 3, \"keyup\", \"keydown\", \"ngStyle\"]],\n    template: function Splitter_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, Splitter_ng_template_0_Template, 3, 7, \"ng-template\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.panels);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, SharedModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Splitter, [{\n    type: Component,\n    args: [{\n      selector: 'p-splitter',\n      standalone: true,\n      imports: [CommonModule, SharedModule],\n      template: `\n        <ng-template ngFor let-panel [ngForOf]=\"panels\" let-i=\"index\">\n            <div [class]=\"cn(cx('panel'), panelStyleClass)\" [ngStyle]=\"panelStyle\" tabindex=\"-1\" [attr.data-pc-name]=\"'splitterpanel'\" [attr.data-pc-section]=\"'panel'\">\n                <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n            </div>\n            <div\n                *ngIf=\"i !== panels.length - 1\"\n                [class]=\"cx('gutter')\"\n                role=\"separator\"\n                tabindex=\"-1\"\n                (mousedown)=\"onGutterMouseDown($event, i)\"\n                (touchstart)=\"onGutterTouchStart($event, i)\"\n                (touchmove)=\"onGutterTouchMove($event)\"\n                (touchend)=\"onGutterTouchEnd($event)\"\n                [attr.data-p-gutter-resizing]=\"false\"\n                [attr.data-pc-section]=\"'gutter'\"\n            >\n                <div\n                    [class]=\"cx('gutterHandle')\"\n                    tabindex=\"0\"\n                    [ngStyle]=\"gutterStyle()\"\n                    [attr.aria-orientation]=\"layout\"\n                    [attr.aria-valuenow]=\"prevSize\"\n                    [attr.data-pc-section]=\"'gutterhandle'\"\n                    (keyup)=\"onGutterKeyUp($event)\"\n                    (keydown)=\"onGutterKeyDown($event, i)\"\n                ></div>\n            </div>\n        </ng-template>\n    `,\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class]': \"cn(cx('root'), styleClass)\",\n        'data-pc-name': 'splitter',\n        'data-pc-section': 'root',\n        '[attr.data-p-gutter-resizing]': 'false'\n      },\n      providers: [SplitterStyle]\n    }]\n  }], null, {\n    styleClass: [{\n      type: Input\n    }],\n    panelStyleClass: [{\n      type: Input\n    }],\n    panelStyle: [{\n      type: Input\n    }],\n    stateStorage: [{\n      type: Input\n    }],\n    stateKey: [{\n      type: Input\n    }],\n    layout: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    step: [{\n      type: Input,\n      args: [{\n        transform: numberAttribute\n      }]\n    }],\n    minSizes: [{\n      type: Input\n    }],\n    panelSizes: [{\n      type: Input\n    }],\n    onResizeEnd: [{\n      type: Output\n    }],\n    onResizeStart: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    panelChildren: [{\n      type: ContentChildren,\n      args: ['panel', {\n        descendants: false\n      }]\n    }]\n  });\n})();\nclass SplitterModule {\n  static ɵfac = function SplitterModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SplitterModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SplitterModule,\n    imports: [Splitter, SharedModule],\n    exports: [Splitter, SharedModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [Splitter, SharedModule, SharedModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SplitterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [Splitter, SharedModule],\n      exports: [Splitter, SharedModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Splitter, SplitterClasses, SplitterModule, SplitterStyle };\n"],
  "mappings": "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",
  "names": ["SplitterClasses"]
}
